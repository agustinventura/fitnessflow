// Mocks generated by Mockito 5.4.5 from annotations
// in fitness_flow/test/domain/use_cases/routine/add_routine_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fitness_flow/core/error/failure.dart' as _i6;
import 'package:fitness_flow/domain/entities/routine.dart' as _i7;
import 'package:fitness_flow/domain/repositories/routine_repository.dart'
    as _i3;
import 'package:fitness_flow/domain/value_objects/routine_id.dart' as _i8;
import 'package:fpdart/fpdart.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:uuid/data.dart' as _i11;
import 'package:uuid/uuid.dart' as _i10;
import 'package:uuid/uuid_value.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUuidValue_0 extends _i1.SmartFake implements _i2.UuidValue {
  _FakeUuidValue_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RoutineRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoutineRepository extends _i1.Mock implements _i3.RoutineRepository {
  @override
  _i4.Future<_i5.Either<_i6.Failure, _i7.Routine?>> findById(
    _i8.RoutineId? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#findById, [id]),
            returnValue:
                _i4.Future<_i5.Either<_i6.Failure, _i7.Routine?>>.value(
                  _i9.dummyValue<_i5.Either<_i6.Failure, _i7.Routine?>>(
                    this,
                    Invocation.method(#findById, [id]),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i5.Either<_i6.Failure, _i7.Routine?>>.value(
                  _i9.dummyValue<_i5.Either<_i6.Failure, _i7.Routine?>>(
                    this,
                    Invocation.method(#findById, [id]),
                  ),
                ),
          )
          as _i4.Future<_i5.Either<_i6.Failure, _i7.Routine?>>);

  @override
  _i4.Future<_i5.Either<_i6.Failure, List<_i7.Routine>>> getAll() =>
      (super.noSuchMethod(
            Invocation.method(#getAll, []),
            returnValue:
                _i4.Future<_i5.Either<_i6.Failure, List<_i7.Routine>>>.value(
                  _i9.dummyValue<_i5.Either<_i6.Failure, List<_i7.Routine>>>(
                    this,
                    Invocation.method(#getAll, []),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i5.Either<_i6.Failure, List<_i7.Routine>>>.value(
                  _i9.dummyValue<_i5.Either<_i6.Failure, List<_i7.Routine>>>(
                    this,
                    Invocation.method(#getAll, []),
                  ),
                ),
          )
          as _i4.Future<_i5.Either<_i6.Failure, List<_i7.Routine>>>);

  @override
  _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>> save(_i7.Routine? routine) =>
      (super.noSuchMethod(
            Invocation.method(#save, [routine]),
            returnValue: _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>>.value(
              _i9.dummyValue<_i5.Either<_i6.Failure, _i5.Unit>>(
                this,
                Invocation.method(#save, [routine]),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>>.value(
                  _i9.dummyValue<_i5.Either<_i6.Failure, _i5.Unit>>(
                    this,
                    Invocation.method(#save, [routine]),
                  ),
                ),
          )
          as _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>>);

  @override
  _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>> delete(_i8.RoutineId? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>>.value(
              _i9.dummyValue<_i5.Either<_i6.Failure, _i5.Unit>>(
                this,
                Invocation.method(#delete, [id]),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>>.value(
                  _i9.dummyValue<_i5.Either<_i6.Failure, _i5.Unit>>(
                    this,
                    Invocation.method(#delete, [id]),
                  ),
                ),
          )
          as _i4.Future<_i5.Either<_i6.Failure, _i5.Unit>>);
}

/// A class which mocks [Uuid].
///
/// See the documentation for Mockito's code generation for more information.
class MockUuid extends _i1.Mock implements _i10.Uuid {
  @override
  String v1({Map<String, dynamic>? options, _i11.V1Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v1, [], {#options: options, #config: config}),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#v1, [], {#options: options, #config: config}),
            ),
            returnValueForMissingStub: _i9.dummyValue<String>(
              this,
              Invocation.method(#v1, [], {#options: options, #config: config}),
            ),
          )
          as String);

  @override
  List<int> v1buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i11.V1Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v1buffer,
              [buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
            returnValueForMissingStub: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v1obj({
    Map<String, dynamic>? options,
    _i11.V1Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#v1obj, [], {#options: options, #config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v1obj, [], {
                #options: options,
                #config: config,
              }),
            ),
            returnValueForMissingStub: _FakeUuidValue_0(
              this,
              Invocation.method(#v1obj, [], {
                #options: options,
                #config: config,
              }),
            ),
          )
          as _i2.UuidValue);

  @override
  String v4({Map<String, dynamic>? options, _i11.V4Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v4, [], {#options: options, #config: config}),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#v4, [], {#options: options, #config: config}),
            ),
            returnValueForMissingStub: _i9.dummyValue<String>(
              this,
              Invocation.method(#v4, [], {#options: options, #config: config}),
            ),
          )
          as String);

  @override
  List<int> v4buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i11.V4Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v4buffer,
              [buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
            returnValueForMissingStub: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v4obj({
    Map<String, dynamic>? options,
    _i11.V4Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#v4obj, [], {#options: options, #config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v4obj, [], {
                #options: options,
                #config: config,
              }),
            ),
            returnValueForMissingStub: _FakeUuidValue_0(
              this,
              Invocation.method(#v4obj, [], {
                #options: options,
                #config: config,
              }),
            ),
          )
          as _i2.UuidValue);

  @override
  String v5(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i11.V5Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5,
              [namespace, name],
              {#options: options, #config: config},
            ),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(
                #v5,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
            returnValueForMissingStub: _i9.dummyValue<String>(
              this,
              Invocation.method(
                #v5,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
          )
          as String);

  @override
  List<int> v5buffer(
    String? namespace,
    String? name,
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i11.V5Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5buffer,
              [namespace, name, buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
            returnValueForMissingStub: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v5obj(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i11.V5Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5obj,
              [namespace, name],
              {#options: options, #config: config},
            ),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(
                #v5obj,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
            returnValueForMissingStub: _FakeUuidValue_0(
              this,
              Invocation.method(
                #v5obj,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
          )
          as _i2.UuidValue);

  @override
  String v6({_i11.V6Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v6, [], {#config: config}),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#v6, [], {#config: config}),
            ),
            returnValueForMissingStub: _i9.dummyValue<String>(
              this,
              Invocation.method(#v6, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v6buffer(
    List<int>? buffer, {
    _i11.V6Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v6buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
            returnValueForMissingStub: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v6obj({_i11.V6Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v6obj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v6obj, [], {#config: config}),
            ),
            returnValueForMissingStub: _FakeUuidValue_0(
              this,
              Invocation.method(#v6obj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);

  @override
  String v7({_i11.V7Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v7, [], {#config: config}),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#v7, [], {#config: config}),
            ),
            returnValueForMissingStub: _i9.dummyValue<String>(
              this,
              Invocation.method(#v7, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v7buffer(
    List<int>? buffer, {
    _i11.V7Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v7buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
            returnValueForMissingStub: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v7obj({_i11.V7Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v7obj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v7obj, [], {#config: config}),
            ),
            returnValueForMissingStub: _FakeUuidValue_0(
              this,
              Invocation.method(#v7obj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);

  @override
  String v8({_i11.V8Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8, [], {#config: config}),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#v8, [], {#config: config}),
            ),
            returnValueForMissingStub: _i9.dummyValue<String>(
              this,
              Invocation.method(#v8, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v8buffer(
    List<int>? buffer, {
    _i11.V8Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v8buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
            returnValueForMissingStub: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v8obj({_i11.V8Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8obj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v8obj, [], {#config: config}),
            ),
            returnValueForMissingStub: _FakeUuidValue_0(
              this,
              Invocation.method(#v8obj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);

  @override
  String v8g({_i11.V8GenericOptions? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8g, [], {#config: config}),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#v8g, [], {#config: config}),
            ),
            returnValueForMissingStub: _i9.dummyValue<String>(
              this,
              Invocation.method(#v8g, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v8gbuffer(
    List<int>? buffer, {
    _i11.V8GenericOptions? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v8gbuffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
            returnValueForMissingStub: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v8gobj({_i11.V8GenericOptions? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8gobj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v8gobj, [], {#config: config}),
            ),
            returnValueForMissingStub: _FakeUuidValue_0(
              this,
              Invocation.method(#v8gobj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);
}
